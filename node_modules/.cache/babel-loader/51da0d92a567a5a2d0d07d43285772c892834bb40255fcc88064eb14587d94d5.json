{"ast":null,"code":"var _jsxFileName = \"/Users/jomosmith/Desktop/Baby Bop/babybop/src/Album.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport Track from './Track';\nimport ReactAudioPlayer from 'react-audio-player';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Album = _ref => {\n  _s();\n  let {\n    album\n  } = _ref;\n  const {\n    coverUrl,\n    title,\n    artist,\n    tracks\n  } = album;\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const audioPlayerRef = useRef(null);\n  useEffect(() => {\n    // Play next track when current track ends\n    const handleEnded = () => {\n      if (currentTrackIndex < tracks.length - 1) {\n        setCurrentTrackIndex(currentTrackIndex + 1);\n      } else {\n        setIsPlaying(false);\n      }\n    };\n    const audioElement = audioPlayerRef.current.audioEl;\n    if (audioElement) {\n      audioElement.addEventListener('ended', handleEnded);\n      return () => {\n        audioElement.removeEventListener('ended', handleEnded);\n      };\n    }\n  }, [currentTrackIndex, tracks]);\n  const handlePlayTrack = (index, event) => {\n    event.preventDefault();\n    if (currentTrackIndex !== null && index !== currentTrackIndex) {\n      // Pause any currently playing track\n      const audioElement = audioPlayerRef.current.audioEl;\n      if (audioElement) {\n        audioElement.pause();\n      }\n    }\n    setCurrentTrackIndex(index);\n    setIsPlaying(true);\n  };\n  const handlePause = () => {\n    if (currentTrackIndex !== null) {\n      // Pause any currently playing track\n      const audioElement = audioPlayerRef.current.audioEl;\n      if (audioElement) {\n        audioElement.pause();\n      }\n    }\n    setIsPlaying(false);\n  };\n  const handleSetAudioRef = element => {\n    audioPlayerRef.current = element;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"album row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: artist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: coverUrl,\n      alt: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"row\",\n      children: tracks.map((track, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(Track, {\n          track: track,\n          index: index,\n          isPlaying: currentTrackIndex === index && isPlaying,\n          onPlayTrack: handlePlayTrack,\n          onPause: handlePause,\n          onSetAudioRef: handleSetAudioRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handlePlayTrack(0),\n      children: \"Play All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePause,\n      children: \"Pause\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Album, \"VDsXMHLZXMIwB3LtQteZxwajSyI=\");\n_c = Album;\nexport default Album;\nvar _c;\n$RefreshReg$(_c, \"Album\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Track","ReactAudioPlayer","jsxDEV","_jsxDEV","Album","_ref","_s","album","coverUrl","title","artist","tracks","currentTrackIndex","setCurrentTrackIndex","isPlaying","setIsPlaying","audioPlayerRef","handleEnded","length","audioElement","current","audioEl","addEventListener","removeEventListener","handlePlayTrack","index","event","preventDefault","pause","handlePause","handleSetAudioRef","element","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","map","track","onPlayTrack","onPause","onSetAudioRef","onClick","_c","$RefreshReg$"],"sources":["/Users/jomosmith/Desktop/Baby Bop/babybop/src/Album.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport Track from './Track';\nimport ReactAudioPlayer from 'react-audio-player';\n\nconst Album = ({ album }) => {\n  const { coverUrl, title, artist, tracks } = album;\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const audioPlayerRef = useRef(null);\n\n  useEffect(() => {\n    // Play next track when current track ends\n    const handleEnded = () => {\n      if (currentTrackIndex < tracks.length - 1) {\n        setCurrentTrackIndex(currentTrackIndex + 1);\n      } else {\n        setIsPlaying(false);\n      }\n    };\n\n    const audioElement = audioPlayerRef.current.audioEl;\n    if (audioElement) {\n      audioElement.addEventListener('ended', handleEnded);\n      return () => {\n        audioElement.removeEventListener('ended', handleEnded);\n      };\n    }\n  }, [currentTrackIndex, tracks]);\n\n  const handlePlayTrack = (index, event) => {\n    event.preventDefault();\n    if (currentTrackIndex !== null && index !== currentTrackIndex) {\n      // Pause any currently playing track\n      const audioElement = audioPlayerRef.current.audioEl;\n      if (audioElement) {\n        audioElement.pause();\n      }\n    }\n    setCurrentTrackIndex(index);\n    setIsPlaying(true);\n  };\n\n  const handlePause = () => {\n    if (currentTrackIndex !== null) {\n      // Pause any currently playing track\n      const audioElement = audioPlayerRef.current.audioEl;\n      if (audioElement) {\n        audioElement.pause();\n      }\n    }\n    setIsPlaying(false);\n  };\n\n  const handleSetAudioRef = (element) => {\n    audioPlayerRef.current = element;\n  };\n\n  return (\n    <div className=\"album row\">\n      <h2>{title}</h2>\n      <h4>{artist}</h4>\n      <img src={coverUrl} alt={title} />\n\n      <ul className=\"row\">\n        {tracks.map((track, index) => (\n          <li key={index} className=\"row\">\n            <Track\n              track={track}\n              index={index}\n              isPlaying={currentTrackIndex === index && isPlaying}\n              onPlayTrack={handlePlayTrack}\n              onPause={handlePause}\n              onSetAudioRef={handleSetAudioRef}\n            />\n          </li>\n        ))}\n      </ul>\n      <button onClick={() => handlePlayTrack(0)}>Play All</button>\n      <button onClick={handlePause}>Pause</button>\n    </div>\n  );\n};\n\nexport default Album;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}