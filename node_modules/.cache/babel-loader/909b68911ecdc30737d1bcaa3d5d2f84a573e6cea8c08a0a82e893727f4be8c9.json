{"ast":null,"code":"var _jsxFileName = \"/Users/jomosmith/Desktop/Baby Bop/babybop/src/Albums.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport Album from './Album';\nimport data from './data.json';\nimport MyNavbar from './MyNavbar';\nimport ReactAudioPlayer from 'react-audio-player';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Albums = () => {\n  _s();\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(null);\n  const audioPlayerRef = useRef(null);\n  const handlePlayTrack = index => {\n    // Pause any currently playing track\n    const audioElement = audioPlayerRef.current.audioEl;\n    if (audioElement) {\n      audioElement.pause();\n      audioElement.currentTime = 0;\n    }\n    setCurrentTrackIndex(index);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MyNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactAudioPlayer, {\n      className: \"reactPlayer col-12\",\n      src: currentTrackIndex !== null ? data[currentTrackIndex].tracks[currentTrackIndex].audioUrl : '',\n      controls: true,\n      ref: audioPlayerRef,\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"albums\",\n      children: data.map(album => /*#__PURE__*/_jsxDEV(Album, {\n        album: album,\n        handlePlayTrack: handlePlayTrack,\n        currentTrackIndex: currentTrackIndex\n      }, album.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Albums, \"Z+kZF0yk9PF4+rkRG+qXEUpMR4k=\");\n_c = Albums;\nexport default Albums;\nvar _c;\n$RefreshReg$(_c, \"Albums\");","map":{"version":3,"names":["React","useState","useRef","Album","data","MyNavbar","ReactAudioPlayer","jsxDEV","_jsxDEV","Albums","_s","currentTrackIndex","setCurrentTrackIndex","audioPlayerRef","handlePlayTrack","index","audioElement","current","audioEl","pause","currentTime","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","tracks","audioUrl","controls","ref","autoPlay","map","album","id","_c","$RefreshReg$"],"sources":["/Users/jomosmith/Desktop/Baby Bop/babybop/src/Albums.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport Album from './Album';\nimport data from './data.json';\nimport MyNavbar from './MyNavbar';\nimport ReactAudioPlayer from 'react-audio-player';\n\nconst Albums = () => {\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(null);\n  const audioPlayerRef = useRef(null);\n\n  const handlePlayTrack = (index) => {\n    // Pause any currently playing track\n    const audioElement = audioPlayerRef.current.audioEl;\n    if (audioElement) {\n      audioElement.pause();\n      audioElement.currentTime = 0;\n    }\n    setCurrentTrackIndex(index);\n  };\n  \n\n  return (\n    <div>\n      <MyNavbar />\n      <ReactAudioPlayer\n        className=\"reactPlayer col-12\"\n        src={currentTrackIndex !== null ? data[currentTrackIndex].tracks[currentTrackIndex].audioUrl : ''}\n        controls\n        ref={audioPlayerRef}\n        autoPlay\n      />\n      <div className=\"albums\">\n        {data.map((album) => (\n          <Album key={album.id} album={album} handlePlayTrack={handlePlayTrack} currentTrackIndex={currentTrackIndex} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Albums;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,gBAAgB,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAMY,cAAc,GAAGX,MAAM,CAAC,IAAI,CAAC;EAEnC,MAAMY,eAAe,GAAIC,KAAK,IAAK;IACjC;IACA,MAAMC,YAAY,GAAGH,cAAc,CAACI,OAAO,CAACC,OAAO;IACnD,IAAIF,YAAY,EAAE;MAChBA,YAAY,CAACG,KAAK,EAAE;MACpBH,YAAY,CAACI,WAAW,GAAG,CAAC;IAC9B;IACAR,oBAAoB,CAACG,KAAK,CAAC;EAC7B,CAAC;EAGD,oBACEP,OAAA;IAAAa,QAAA,gBACEb,OAAA,CAACH,QAAQ;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACZjB,OAAA,CAACF,gBAAgB;MACfoB,SAAS,EAAC,oBAAoB;MAC9BC,GAAG,EAAEhB,iBAAiB,KAAK,IAAI,GAAGP,IAAI,CAACO,iBAAiB,CAAC,CAACiB,MAAM,CAACjB,iBAAiB,CAAC,CAACkB,QAAQ,GAAG,EAAG;MAClGC,QAAQ;MACRC,GAAG,EAAElB,cAAe;MACpBmB,QAAQ;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACR,eACFjB,OAAA;MAAKkB,SAAS,EAAC,QAAQ;MAAAL,QAAA,EACpBjB,IAAI,CAAC6B,GAAG,CAAEC,KAAK,iBACd1B,OAAA,CAACL,KAAK;QAAgB+B,KAAK,EAAEA,KAAM;QAACpB,eAAe,EAAEA,eAAgB;QAACH,iBAAiB,EAAEA;MAAkB,GAA/FuB,KAAK,CAACC,EAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACrB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAACf,EAAA,CAhCID,MAAM;AAAA2B,EAAA,GAAN3B,MAAM;AAkCZ,eAAeA,MAAM;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}