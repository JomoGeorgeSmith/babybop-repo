{"ast":null,"code":"var _jsxFileName = \"/Users/jomosmith/Desktop/Baby Bop/babybop/src/Albums.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport Album from './Album';\nimport data from './data.json';\nimport MyNavbar from './MyNavbar';\nimport ReactAudioPlayer from 'react-audio-player';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Albums = () => {\n  _s();\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(null);\n  const audioPlayerRef = useRef(null);\n  const handlePlayTrack = index => {\n    setCurrentTrackIndex(index);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MyNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"albums\",\n      children: [data.map(album => /*#__PURE__*/_jsxDEV(Album, {\n        album: album,\n        handlePlayTrack: handlePlayTrack,\n        currentTrackIndex: currentTrackIndex\n      }, album.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"fixed-player\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerArea\",\n          children: /*#__PURE__*/_jsxDEV(ReactAudioPlayer, {\n            className: \"reactPlayer col-12\",\n            src: currentTrackIndex !== null ? data[currentTrackIndex].tracks[currentTrackIndex].audioUrl : '',\n            controls: true,\n            ref: audioPlayerRef,\n            autoPlay: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(Albums, \"Z+kZF0yk9PF4+rkRG+qXEUpMR4k=\");\n_c = Albums;\nexport default Albums;\nvar _c;\n$RefreshReg$(_c, \"Albums\");","map":{"version":3,"names":["React","useState","useRef","Album","data","MyNavbar","ReactAudioPlayer","jsxDEV","_jsxDEV","Albums","_s","currentTrackIndex","setCurrentTrackIndex","audioPlayerRef","handlePlayTrack","index","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","album","id","src","tracks","audioUrl","controls","ref","autoPlay","_c","$RefreshReg$"],"sources":["/Users/jomosmith/Desktop/Baby Bop/babybop/src/Albums.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport Album from './Album';\nimport data from './data.json';\nimport MyNavbar from './MyNavbar';\nimport ReactAudioPlayer from 'react-audio-player';\n\nconst Albums = () => {\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(null);\n  const audioPlayerRef = useRef(null);\n  \n  const handlePlayTrack = (index) => { \n    setCurrentTrackIndex(index);\n  };\n\n  return (\n    <div>\n      <MyNavbar />\n      <div className=\"albums\">\n        {data.map((album) => (\n          <Album key={album.id} album={album} handlePlayTrack={handlePlayTrack} currentTrackIndex={currentTrackIndex} />\n        ))}\n        <section className=\"fixed-player\">\n          <div className=\"playerArea\">\n        <ReactAudioPlayer\n        className=\"reactPlayer col-12\"\n        src={currentTrackIndex !== null ? data[currentTrackIndex].tracks[currentTrackIndex].audioUrl : ''}\n        controls\n        ref={audioPlayerRef}\n        autoPlay\n      />\n      </div>\n        </section>\n      </div>\n    </div>\n  );\n};\n\nexport default Albums;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,gBAAgB,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAMY,cAAc,GAAGX,MAAM,CAAC,IAAI,CAAC;EAEnC,MAAMY,eAAe,GAAIC,KAAK,IAAK;IACjCH,oBAAoB,CAACG,KAAK,CAAC;EAC7B,CAAC;EAED,oBACEP,OAAA;IAAAQ,QAAA,gBACER,OAAA,CAACH,QAAQ;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACZZ,OAAA;MAAKa,SAAS,EAAC,QAAQ;MAAAL,QAAA,GACpBZ,IAAI,CAACkB,GAAG,CAAEC,KAAK,iBACdf,OAAA,CAACL,KAAK;QAAgBoB,KAAK,EAAEA,KAAM;QAACT,eAAe,EAAEA,eAAgB;QAACH,iBAAiB,EAAEA;MAAkB,GAA/FY,KAAK,CAACC,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACrB,CAAC,eACFZ,OAAA;QAASa,SAAS,EAAC,cAAc;QAAAL,QAAA,eAC/BR,OAAA;UAAKa,SAAS,EAAC,YAAY;UAAAL,QAAA,eAC7BR,OAAA,CAACF,gBAAgB;YACjBe,SAAS,EAAC,oBAAoB;YAC9BI,GAAG,EAAEd,iBAAiB,KAAK,IAAI,GAAGP,IAAI,CAACO,iBAAiB,CAAC,CAACe,MAAM,CAACf,iBAAiB,CAAC,CAACgB,QAAQ,GAAG,EAAG;YAClGC,QAAQ;YACRC,GAAG,EAAEhB,cAAe;YACpBiB,QAAQ;UAAA;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QACR;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACI;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACM;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAACV,EAAA,CA7BID,MAAM;AAAAsB,EAAA,GAANtB,MAAM;AA+BZ,eAAeA,MAAM;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}