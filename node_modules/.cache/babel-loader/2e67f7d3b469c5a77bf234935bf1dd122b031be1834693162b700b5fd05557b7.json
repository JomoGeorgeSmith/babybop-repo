{"ast":null,"code":"var _jsxFileName = \"/Users/jomosmith/Desktop/Portfolio Projects/Baby Bop/babybop/src/Album.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Album = _ref => {\n  _s();\n  let {\n    album,\n    handlePlayTrack,\n    currentTrackIndex,\n    currentAlbumIndex\n  } = _ref;\n  const {\n    coverUrl,\n    title,\n    artist,\n    tracks\n  } = album;\n  const [playingTrackIndex, setPlayingTrackIndex] = useState(-1);\n  const handleTrackClick = index => {\n    handlePlayTrack(index, currentAlbumIndex);\n    setPlayingTrackIndex(index);\n  };\n  const handlePreviousTrack = () => {\n    const previousTrackIndex = playingTrackIndex === 0 ? tracks.length - 1 : playingTrackIndex - 1;\n    handlePlayTrack(previousTrackIndex, currentAlbumIndex);\n    setPlayingTrackIndex(previousTrackIndex);\n  };\n  const handleNextTrack = () => {\n    const nextTrackIndex = playingTrackIndex === tracks.length - 1 ? 0 : playingTrackIndex + 1;\n    handlePlayTrack(nextTrackIndex, currentAlbumIndex);\n    setPlayingTrackIndex(nextTrackIndex);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"album row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: coverUrl,\n        alt: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"Album Title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"Artist Name\",\n        children: artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePreviousTrack,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePlayTrack(0, currentAlbumIndex),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextTrack,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"row\",\n      children: tracks.map((track, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `row trackList ${playingTrackIndex === index ? 'playing' : ''}`,\n        onClick: () => handleTrackClick(index),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: track.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Album, \"Dy6q0ASKADKjLKoVGV4R/BkxOfs=\");\n_c = Album;\nexport default Album;\nvar _c;\n$RefreshReg$(_c, \"Album\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Album","_ref","_s","album","handlePlayTrack","currentTrackIndex","currentAlbumIndex","coverUrl","title","artist","tracks","playingTrackIndex","setPlayingTrackIndex","handleTrackClick","index","handlePreviousTrack","previousTrackIndex","length","handleNextTrack","nextTrackIndex","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","track","_c","$RefreshReg$"],"sources":["/Users/jomosmith/Desktop/Portfolio Projects/Baby Bop/babybop/src/Album.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Album = ({ album, handlePlayTrack, currentTrackIndex, currentAlbumIndex }) => {\n  const { coverUrl, title, artist, tracks } = album;\n\n  const [playingTrackIndex, setPlayingTrackIndex] = useState(-1);\n\n  const handleTrackClick = (index) => {\n    handlePlayTrack(index, currentAlbumIndex);\n    setPlayingTrackIndex(index);\n  };\n\n  const handlePreviousTrack = () => {\n    const previousTrackIndex = playingTrackIndex === 0 ? tracks.length - 1 : playingTrackIndex - 1;\n    handlePlayTrack(previousTrackIndex, currentAlbumIndex);\n    setPlayingTrackIndex(previousTrackIndex);\n  };\n\n  const handleNextTrack = () => {\n    const nextTrackIndex = playingTrackIndex === tracks.length - 1 ? 0 : playingTrackIndex + 1;\n    handlePlayTrack(nextTrackIndex, currentAlbumIndex);\n    setPlayingTrackIndex(nextTrackIndex);\n  };\n\n  return (\n    <div className=\"album row\">\n      <div className=\"col\">\n        <img src={coverUrl} alt={title} />\n      </div>\n      <div className=\"col\">\n        <h2 className=\"Album Title\">{title}</h2>\n        <h3 className=\"Artist Name\">{artist}</h3>\n      </div>\n      <div className=\"button-container\">\n        <button onClick={handlePreviousTrack}>\n          <span>Previous</span>\n        </button>\n        <button onClick={() => handlePlayTrack(0, currentAlbumIndex)}>\n          <span>Play</span>\n        </button>\n        <button onClick={handleNextTrack}>\n          <span>Next</span>\n        </button>\n      </div>\n      <ul className=\"row\">\n        {tracks.map((track, index) => (\n          <li\n            key={index}\n            className={`row trackList ${playingTrackIndex === index ? 'playing' : ''}`}\n            onClick={() => handleTrackClick(index)}\n          >\n            <span>{track.title}</span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Album;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}