{"ast":null,"code":"var _jsxFileName = \"/Users/jomosmith/Desktop/Baby Bop/babybop/src/Album.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport Track from './Track';\nimport ReactAudioPlayer from 'react-audio-player';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Album = _ref => {\n  _s();\n  let {\n    album\n  } = _ref;\n  const {\n    coverUrl,\n    title,\n    artist,\n    tracks\n  } = album;\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const audioPlayerRef = useRef(null);\n  useEffect(() => {\n    // Play next track when current track ends\n    const handleEnded = () => {\n      if (currentTrackIndex < tracks.length - 1) {\n        setCurrentTrackIndex(currentTrackIndex + 1);\n      } else {\n        setIsPlaying(false);\n      }\n    };\n    if (audioPlayerRef.current) {\n      audioPlayerRef.current.addEventListener('ended', handleEnded);\n    }\n    return () => {\n      if (audioPlayerRef.current) {\n        audioPlayerRef.current.removeEventListener('ended', handleEnded);\n      }\n    };\n  }, [currentTrackIndex]);\n  const handlePlayAll = () => {\n    setCurrentTrackIndex(0);\n    setIsPlaying(true);\n  };\n  const handlePlayTrack = index => {\n    setCurrentTrackIndex(index);\n    setIsPlaying(true);\n  };\n  const handlePause = () => {\n    setIsPlaying(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"album row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: artist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: coverUrl,\n      alt: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"row\",\n      children: tracks.map((track, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(ReactAudioPlayer, {\n          className: \"reactPlayer col-12\",\n          src: track.audioUrl,\n          controls: currentTrackIndex === index,\n          autoPlay: isPlaying && currentTrackIndex === index\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Album, \"VDsXMHLZXMIwB3LtQteZxwajSyI=\");\n_c = Album;\nexport default Album;\nvar _c;\n$RefreshReg$(_c, \"Album\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Track","ReactAudioPlayer","jsxDEV","_jsxDEV","Album","_ref","_s","album","coverUrl","title","artist","tracks","currentTrackIndex","setCurrentTrackIndex","isPlaying","setIsPlaying","audioPlayerRef","handleEnded","length","current","addEventListener","removeEventListener","handlePlayAll","handlePlayTrack","index","handlePause","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","map","track","audioUrl","controls","autoPlay","_c","$RefreshReg$"],"sources":["/Users/jomosmith/Desktop/Baby Bop/babybop/src/Album.js"],"sourcesContent":["import React, { useState, useEffect, useRef  } from 'react';\nimport Track from './Track';\nimport ReactAudioPlayer from 'react-audio-player';\n\nconst Album = ({ album }) => {\n  const { coverUrl, title, artist, tracks } = album;\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const audioPlayerRef = useRef(null);\n \n  useEffect(() => {\n    // Play next track when current track ends\n    const handleEnded = () => {\n      if (currentTrackIndex < tracks.length - 1) {\n        setCurrentTrackIndex(currentTrackIndex + 1);\n      } else {\n        setIsPlaying(false);\n      }\n    };\n\n    if (audioPlayerRef.current) {\n      audioPlayerRef.current.addEventListener('ended', handleEnded);\n    }\n\n    return () => {\n      if (audioPlayerRef.current) {\n        audioPlayerRef.current.removeEventListener('ended', handleEnded);\n      }\n    };\n  }, [currentTrackIndex]);\n\n  const handlePlayAll = () => {\n    setCurrentTrackIndex(0);\n    setIsPlaying(true);\n  };\n\n  const handlePlayTrack = (index) => {\n    setCurrentTrackIndex(index);\n    setIsPlaying(true);\n  };\n\n  const handlePause = () => {\n    setIsPlaying(false);\n  };\n\n\n\n  return (\n    <div className=\"album row\">\n      <h2>{title}</h2>\n      <h4>{artist}</h4>\n      <img src={coverUrl} alt={title} />\n\n\n      <ul className=\"row\">\n        {tracks.map((track, index) => (\n          <li key={index} className=\"row\">\n            <ReactAudioPlayer\n              className=\"reactPlayer col-12\"\n              src={track.audioUrl}\n              controls ={currentTrackIndex === index}\n              autoPlay={isPlaying && currentTrackIndex === index}\n            />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Album;\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAS,OAAO;AAC3D,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,gBAAgB,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,KAAK,GAAGC,IAAA,IAAe;EAAAC,EAAA;EAAA,IAAd;IAAEC;EAAM,CAAC,GAAAF,IAAA;EACtB,MAAM;IAAEG,QAAQ;IAAEC,KAAK;IAAEC,MAAM;IAAEC;EAAO,CAAC,GAAGJ,KAAK;EACjD,MAAM,CAACK,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMmB,cAAc,GAAGjB,MAAM,CAAC,IAAI,CAAC;EAEnCD,SAAS,CAAC,MAAM;IACd;IACA,MAAMmB,WAAW,GAAGA,CAAA,KAAM;MACxB,IAAIL,iBAAiB,GAAGD,MAAM,CAACO,MAAM,GAAG,CAAC,EAAE;QACzCL,oBAAoB,CAACD,iBAAiB,GAAG,CAAC,CAAC;MAC7C,CAAC,MAAM;QACLG,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IAED,IAAIC,cAAc,CAACG,OAAO,EAAE;MAC1BH,cAAc,CAACG,OAAO,CAACC,gBAAgB,CAAC,OAAO,EAAEH,WAAW,CAAC;IAC/D;IAEA,OAAO,MAAM;MACX,IAAID,cAAc,CAACG,OAAO,EAAE;QAC1BH,cAAc,CAACG,OAAO,CAACE,mBAAmB,CAAC,OAAO,EAAEJ,WAAW,CAAC;MAClE;IACF,CAAC;EACH,CAAC,EAAE,CAACL,iBAAiB,CAAC,CAAC;EAEvB,MAAMU,aAAa,GAAGA,CAAA,KAAM;IAC1BT,oBAAoB,CAAC,CAAC,CAAC;IACvBE,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMQ,eAAe,GAAIC,KAAK,IAAK;IACjCX,oBAAoB,CAACW,KAAK,CAAC;IAC3BT,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMU,WAAW,GAAGA,CAAA,KAAM;IACxBV,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAID,oBACEZ,OAAA;IAAKuB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBxB,OAAA;MAAAwB,QAAA,EAAKlB;IAAK;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAChB5B,OAAA;MAAAwB,QAAA,EAAKjB;IAAM;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACjB5B,OAAA;MAAK6B,GAAG,EAAExB,QAAS;MAACyB,GAAG,EAAExB;IAAM;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAGlC5B,OAAA;MAAIuB,SAAS,EAAC,KAAK;MAAAC,QAAA,EAChBhB,MAAM,CAACuB,GAAG,CAAC,CAACC,KAAK,EAAEX,KAAK,kBACvBrB,OAAA;QAAgBuB,SAAS,EAAC,KAAK;QAAAC,QAAA,eAC7BxB,OAAA,CAACF,gBAAgB;UACfyB,SAAS,EAAC,oBAAoB;UAC9BM,GAAG,EAAEG,KAAK,CAACC,QAAS;UACpBC,QAAQ,EAAGzB,iBAAiB,KAAKY,KAAM;UACvCc,QAAQ,EAAExB,SAAS,IAAIF,iBAAiB,KAAKY;QAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACnD,GANKP,KAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAQf;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEV,CAAC;AAACzB,EAAA,CAhEIF,KAAK;AAAAmC,EAAA,GAALnC,KAAK;AAkEX,eAAeA,KAAK;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}