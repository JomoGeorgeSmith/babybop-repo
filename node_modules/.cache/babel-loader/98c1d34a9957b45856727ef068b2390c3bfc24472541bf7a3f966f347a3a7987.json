{"ast":null,"code":"var _jsxFileName = \"/Users/jomosmith/Desktop/Portfolio Projects/Baby Bop/babybop/src/Album.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Album = _ref => {\n  _s();\n  let {\n    album,\n    handlePlayTrack,\n    currentTrackIndex,\n    currentAlbumIndex\n  } = _ref;\n  const {\n    coverUrl,\n    title,\n    artist,\n    tracks\n  } = album;\n  const [playingTrackIndex, setPlayingTrackIndex] = useState(-1);\n  const [playingAlbumIndex, setPlayingAlbumIndex] = useState(-1);\n  const handleTrackClick = index => {\n    handlePlayTrack(index, currentAlbumIndex);\n    setPlayingTrackIndex(index);\n    setPlayingAlbumIndex(currentAlbumIndex);\n  };\n  useEffect(() => {\n    // Reset the state variables when a new album is selected\n    setPlayingTrackIndex(-1);\n    setPlayingAlbumIndex(-1);\n  }, [currentAlbumIndex]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"album row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: coverUrl,\n        alt: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"Album Title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"Artist Name\",\n        children: artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePlayTrack(0, currentAlbumIndex),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"row\",\n      children: tracks.map((track, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `row trackList ${playingTrackIndex === index && currentAlbumIndex === playingAlbumIndex ? 'playing' : ''} `,\n        onClick: () => handleTrackClick(index),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: track.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Album, \"LflSe66fm5ciZVqyrOkd9guIj9M=\");\n_c = Album;\nexport default Album;\nvar _c;\n$RefreshReg$(_c, \"Album\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Album","_ref","_s","album","handlePlayTrack","currentTrackIndex","currentAlbumIndex","coverUrl","title","artist","tracks","playingTrackIndex","setPlayingTrackIndex","playingAlbumIndex","setPlayingAlbumIndex","handleTrackClick","index","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","class","onClick","map","track","_c","$RefreshReg$"],"sources":["/Users/jomosmith/Desktop/Portfolio Projects/Baby Bop/babybop/src/Album.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Album = ({ album, handlePlayTrack, currentTrackIndex, currentAlbumIndex }) => {\n  const { coverUrl, title, artist, tracks } = album;\n\n  const [playingTrackIndex, setPlayingTrackIndex] = useState(-1);\n  const [playingAlbumIndex, setPlayingAlbumIndex] = useState(-1);\n\n  const handleTrackClick = (index) => {\n    handlePlayTrack(index, currentAlbumIndex);\n    setPlayingTrackIndex(index);\n    setPlayingAlbumIndex(currentAlbumIndex)\n  };\n\n  useEffect(() => {\n    // Reset the state variables when a new album is selected\n    setPlayingTrackIndex(-1);\n    setPlayingAlbumIndex(-1);\n  }, [currentAlbumIndex]);\n\n  return (\n    <div className=\"album row\">\n      <div className=\"col\">\n        <img src={coverUrl} alt={title} />\n      </div>\n      <div className=\"col\">\n        <h2 className=\"Album Title\">{title}</h2>\n        <h3 className=\"Artist Name\">{artist}</h3>\n      </div>\n      <div class=\"button-container\">\n        <button onClick={() => handlePlayTrack(0, currentAlbumIndex)}>\n          <span>Play</span>\n        </button>\n      </div>\n      <ul className=\"row\">\n        {tracks.map((track, index) => (\n          <li\n            key={index}\n            className={`row trackList ${playingTrackIndex === index  && currentAlbumIndex === playingAlbumIndex? 'playing' : ''} `}\n            onClick={() => handleTrackClick(index)}\n          >\n            <span>{track.title}</span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Album;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}