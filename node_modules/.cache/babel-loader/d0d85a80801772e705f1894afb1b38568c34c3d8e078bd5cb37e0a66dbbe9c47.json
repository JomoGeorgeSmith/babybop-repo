{"ast":null,"code":"var _jsxFileName = \"/Users/jomosmith/Desktop/Baby Bop/babybop/src/Album.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport Track from './Track';\nimport ReactAudioPlayer from 'react-audio-player';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Album = _ref => {\n  _s();\n  let {\n    album\n  } = _ref;\n  const {\n    coverUrl,\n    title,\n    artist,\n    tracks\n  } = album;\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentAudioRef, setCurrentAudioRef] = useState(null);\n  useEffect(() => {\n    // Play next track when current track ends\n    const handleEnded = () => {\n      if (currentTrackIndex < tracks.length - 1) {\n        setCurrentTrackIndex(currentTrackIndex + 1);\n      } else {\n        setIsPlaying(false);\n      }\n    };\n    if (currentAudioRef) {\n      currentAudioRef.audioEl.addEventListener('ended', handleEnded);\n      return () => {\n        currentAudioRef.audioEl.removeEventListener('ended', handleEnded);\n      };\n    }\n  }, [currentTrackIndex, currentAudioRef, tracks]);\n  const handlePlayTrack = (index, event) => {\n    event.preventDefault();\n    if (currentTrackIndex !== null && index !== currentTrackIndex) {\n      // Pause any currently playing track\n      if (currentAudioRef) {\n        currentAudioRef.audioEl.pause();\n      }\n    }\n    setCurrentTrackIndex(index);\n    setIsPlaying(true);\n  };\n  const handlePause = () => {\n    if (currentAudioRef) {\n      currentAudioRef.audioEl.pause();\n    }\n    setIsPlaying(false);\n  };\n  const handleSetAudioRef = (index, element) => {\n    if (currentTrackIndex === index) {\n      setCurrentAudioRef(element);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"album row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: artist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: coverUrl,\n      alt: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"row\",\n      children: tracks.map((track, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(ReactAudioPlayer, {\n          className: \"reactPlayer col-12\",\n          src: track.audioUrl,\n          controls: true,\n          onPlay: e => handlePlayTrack(index, e),\n          onPause: () => setIsPlaying(false),\n          ref: element => handleSetAudioRef(index, element)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handlePlayTrack(0),\n      children: \"Play All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePause,\n      children: \"Pause\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Album, \"TZRDwswMOXcElYGDi6v6jxU49T4=\");\n_c = Album;\nexport default Album;\nvar _c;\n$RefreshReg$(_c, \"Album\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Track","ReactAudioPlayer","jsxDEV","_jsxDEV","Album","_ref","_s","album","coverUrl","title","artist","tracks","currentTrackIndex","setCurrentTrackIndex","isPlaying","setIsPlaying","currentAudioRef","setCurrentAudioRef","handleEnded","length","audioEl","addEventListener","removeEventListener","handlePlayTrack","index","event","preventDefault","pause","handlePause","handleSetAudioRef","element","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","map","track","audioUrl","controls","onPlay","e","onPause","ref","onClick","_c","$RefreshReg$"],"sources":["/Users/jomosmith/Desktop/Baby Bop/babybop/src/Album.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport Track from './Track';\nimport ReactAudioPlayer from 'react-audio-player';\n\nconst Album = ({ album }) => {\n  const { coverUrl, title, artist, tracks } = album;\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentAudioRef, setCurrentAudioRef] = useState(null);\n\n  useEffect(() => {\n    // Play next track when current track ends\n    const handleEnded = () => {\n      if (currentTrackIndex < tracks.length - 1) {\n        setCurrentTrackIndex(currentTrackIndex + 1);\n      } else {\n        setIsPlaying(false);\n      }\n    };\n\n    if (currentAudioRef) {\n      currentAudioRef.audioEl.addEventListener('ended', handleEnded);\n      return () => {\n        currentAudioRef.audioEl.removeEventListener('ended', handleEnded);\n      };\n    }\n  }, [currentTrackIndex, currentAudioRef, tracks]);\n\n  const handlePlayTrack = (index, event) => {\n    event.preventDefault();\n    if (currentTrackIndex !== null && index !== currentTrackIndex) {\n      // Pause any currently playing track\n      if (currentAudioRef) {\n        currentAudioRef.audioEl.pause();\n      }\n    }\n    setCurrentTrackIndex(index);\n    setIsPlaying(true);\n  };\n\n  const handlePause = () => {\n    if (currentAudioRef) {\n      currentAudioRef.audioEl.pause();\n    }\n    setIsPlaying(false);\n  };\n\n  const handleSetAudioRef = (index, element) => {\n    if (currentTrackIndex === index) {\n      setCurrentAudioRef(element);\n    }\n  };\n\n  return (\n    <div className=\"album row\">\n      <h2>{title}</h2>\n      <h4>{artist}</h4>\n      <img src={coverUrl} alt={title} />\n\n      <ul className=\"row\">\n        {tracks.map((track, index) => (\n          <li key={index} className=\"row\">\n            <ReactAudioPlayer\n              className=\"reactPlayer col-12\"\n              src={track.audioUrl}\n              controls\n              onPlay={(e) => handlePlayTrack(index, e)}\n              onPause={() => setIsPlaying(false)}\n              ref={(element) => handleSetAudioRef(index, element)}\n            />\n          </li>\n        ))}\n      </ul>\n      <button onClick={() => handlePlayTrack(0)}>Play All</button>\n      <button onClick={handlePause}>Pause</button>\n    </div>\n  );\n};\n\nexport default Album;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,gBAAgB,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,KAAK,GAAGC,IAAA,IAAe;EAAAC,EAAA;EAAA,IAAd;IAAEC;EAAM,CAAC,GAAAF,IAAA;EACtB,MAAM;IAAEG,QAAQ;IAAEC,KAAK;IAAEC,MAAM;IAAEC;EAAO,CAAC,GAAGJ,KAAK;EACjD,MAAM,CAACK,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACmB,eAAe,EAAEC,kBAAkB,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAE5DC,SAAS,CAAC,MAAM;IACd;IACA,MAAMoB,WAAW,GAAGA,CAAA,KAAM;MACxB,IAAIN,iBAAiB,GAAGD,MAAM,CAACQ,MAAM,GAAG,CAAC,EAAE;QACzCN,oBAAoB,CAACD,iBAAiB,GAAG,CAAC,CAAC;MAC7C,CAAC,MAAM;QACLG,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IAED,IAAIC,eAAe,EAAE;MACnBA,eAAe,CAACI,OAAO,CAACC,gBAAgB,CAAC,OAAO,EAAEH,WAAW,CAAC;MAC9D,OAAO,MAAM;QACXF,eAAe,CAACI,OAAO,CAACE,mBAAmB,CAAC,OAAO,EAAEJ,WAAW,CAAC;MACnE,CAAC;IACH;EACF,CAAC,EAAE,CAACN,iBAAiB,EAAEI,eAAe,EAAEL,MAAM,CAAC,CAAC;EAEhD,MAAMY,eAAe,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;IACxCA,KAAK,CAACC,cAAc,EAAE;IACtB,IAAId,iBAAiB,KAAK,IAAI,IAAIY,KAAK,KAAKZ,iBAAiB,EAAE;MAC7D;MACA,IAAII,eAAe,EAAE;QACnBA,eAAe,CAACI,OAAO,CAACO,KAAK,EAAE;MACjC;IACF;IACAd,oBAAoB,CAACW,KAAK,CAAC;IAC3BT,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMa,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIZ,eAAe,EAAE;MACnBA,eAAe,CAACI,OAAO,CAACO,KAAK,EAAE;IACjC;IACAZ,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMc,iBAAiB,GAAGA,CAACL,KAAK,EAAEM,OAAO,KAAK;IAC5C,IAAIlB,iBAAiB,KAAKY,KAAK,EAAE;MAC/BP,kBAAkB,CAACa,OAAO,CAAC;IAC7B;EACF,CAAC;EAED,oBACE3B,OAAA;IAAK4B,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxB7B,OAAA;MAAA6B,QAAA,EAAKvB;IAAK;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAChBjC,OAAA;MAAA6B,QAAA,EAAKtB;IAAM;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACjBjC,OAAA;MAAKkC,GAAG,EAAE7B,QAAS;MAAC8B,GAAG,EAAE7B;IAAM;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAElCjC,OAAA;MAAI4B,SAAS,EAAC,KAAK;MAAAC,QAAA,EAChBrB,MAAM,CAAC4B,GAAG,CAAC,CAACC,KAAK,EAAEhB,KAAK,kBACvBrB,OAAA;QAAgB4B,SAAS,EAAC,KAAK;QAAAC,QAAA,eAC7B7B,OAAA,CAACF,gBAAgB;UACf8B,SAAS,EAAC,oBAAoB;UAC9BM,GAAG,EAAEG,KAAK,CAACC,QAAS;UACpBC,QAAQ;UACRC,MAAM,EAAGC,CAAC,IAAKrB,eAAe,CAACC,KAAK,EAAEoB,CAAC,CAAE;UACzCC,OAAO,EAAEA,CAAA,KAAM9B,YAAY,CAAC,KAAK,CAAE;UACnC+B,GAAG,EAAGhB,OAAO,IAAKD,iBAAiB,CAACL,KAAK,EAAEM,OAAO;QAAE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACpD,GARKZ,KAAK;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAUf;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACC,eACLjC,OAAA;MAAQ4C,OAAO,EAAEA,CAAA,KAAMxB,eAAe,CAAC,CAAC,CAAE;MAAAS,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAC5DjC,OAAA;MAAQ4C,OAAO,EAAEnB,WAAY;MAAAI,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACxC;AAEV,CAAC;AAAC9B,EAAA,CAzEIF,KAAK;AAAA4C,EAAA,GAAL5C,KAAK;AA2EX,eAAeA,KAAK;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}