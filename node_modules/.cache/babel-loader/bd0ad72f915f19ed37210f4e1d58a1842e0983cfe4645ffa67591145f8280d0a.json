{"ast":null,"code":"var _jsxFileName = \"/Users/jomosmith/Desktop/Baby Bop/babybop/src/Album.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Track from './Track';\nimport ReactAudioPlayer from 'react-audio-player';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Album = _ref => {\n  _s();\n  let {\n    album\n  } = _ref;\n  const {\n    coverUrl,\n    title,\n    artist,\n    tracks\n  } = album;\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(null);\n  const [currentTrackName, setCurrentTrackName] = useState('');\n  const playAll = () => {\n    setCurrentTrackIndex(0);\n  };\n  const playTrack = (index, name) => {\n    setCurrentTrackIndex(index);\n    setCurrentTrackName(name);\n  };\n  const handleTrackEnded = () => {\n    if (currentTrackIndex < tracks.length - 1) {\n      setCurrentTrackIndex(currentTrackIndex + 1);\n      setCurrentTrackName(tracks[currentTrackIndex + 1].title);\n    } else {\n      setCurrentTrackIndex(null);\n      setCurrentTrackName('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"album \",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: artist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: coverUrl,\n      alt: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: playAll,\n      className: \"playAll\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"row\",\n      children: tracks.map((track, index) =>\n      /*#__PURE__*/\n      // <Track\n      //   key={index}\n      //   track={track}\n      //   onPlay={() => playTrack(index)}\n      //   isPlaying={index === currentTrackIndex}\n      // />\n      _jsxDEV(ReactAudioPlayer, {\n        className: \"reactPlayer col-8\",\n        src: track.audioUrl,\n        onPlay: () => playTrack(index, track.name),\n        isPlaying: index === currentTrackIndex,\n        controls: true\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), currentTrackIndex !== null && /*#__PURE__*/_jsxDEV(\"audio\", {\n      src: tracks[currentTrackIndex].audioUrl,\n      autoPlay: true,\n      onEnded: handleTrackEnded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Album, \"fgXcFU3Vs+0VsHASTF7qCSBDqo4=\");\n_c = Album;\nexport default Album;\nvar _c;\n$RefreshReg$(_c, \"Album\");","map":{"version":3,"names":["React","useState","Track","ReactAudioPlayer","jsxDEV","_jsxDEV","Album","_ref","_s","album","coverUrl","title","artist","tracks","currentTrackIndex","setCurrentTrackIndex","currentTrackName","setCurrentTrackName","playAll","playTrack","index","name","handleTrackEnded","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","map","track","audioUrl","onPlay","isPlaying","controls","autoPlay","onEnded","_c","$RefreshReg$"],"sources":["/Users/jomosmith/Desktop/Baby Bop/babybop/src/Album.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Track from './Track';\nimport ReactAudioPlayer from 'react-audio-player';\n\nconst Album = ({ album }) => {\n  const { coverUrl, title, artist, tracks } = album;\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(null);\n  const [currentTrackName, setCurrentTrackName] = useState(''); \n\n  const playAll = () => {\n    setCurrentTrackIndex(0);\n  };\n\n  const playTrack = (index, name) => {\n    setCurrentTrackIndex(index);\n    setCurrentTrackName(name);\n  };\n\n  const handleTrackEnded = () => {\n    if (currentTrackIndex < tracks.length - 1) {\n      setCurrentTrackIndex(currentTrackIndex + 1);\n      setCurrentTrackName(tracks[currentTrackIndex + 1].title);\n    } else {\n      setCurrentTrackIndex(null);\n      setCurrentTrackName('');\n    }\n  };\n\n  return (\n    <div className=\"album \">\n      <h2>{title}</h2>\n      <h3>{artist}</h3>\n      <img src={coverUrl} alt={title} />\n      <button onClick={playAll} className=\"playAll\"></button>\n      <ul className=\"row\">\n        {tracks.map((track, index) => (\n\n          // <Track\n          //   key={index}\n          //   track={track}\n          //   onPlay={() => playTrack(index)}\n          //   isPlaying={index === currentTrackIndex}\n          // />\n    \n          <ReactAudioPlayer\n            className=\"reactPlayer col-8\"\n            src={track.audioUrl}\n            key={index}\n            onPlay={() => playTrack(index , track.name)}\n            isPlaying={index === currentTrackIndex}\n            controls\n          />\n\n        ))}\n      </ul>\n      {currentTrackIndex !== null && (\n        <audio\n          src={tracks[currentTrackIndex].audioUrl}\n          autoPlay\n          onEnded={handleTrackEnded}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Album;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}