{"ast":null,"code":"var _jsxFileName = \"/Users/jomosmith/Desktop/Portfolio Projects/Baby Bop/babybop/src/Albums.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Album = _ref => {\n  _s();\n  let {\n    album,\n    handlePlayTrack,\n    currentTrackIndex,\n    currentAlbumIndex\n  } = _ref;\n  const {\n    coverUrl,\n    title,\n    artist,\n    tracks\n  } = album;\n  const [playingTrackIndex, setPlayingTrackIndex] = useState(-1);\n  const handleTrackClick = index => {\n    handlePlayTrack(index, currentAlbumIndex);\n    setPlayingTrackIndex(index);\n  };\n  const handleNextTrack = () => {\n    if (currentTrackIndex < tracks.length - 1) {\n      handlePlayTrack(currentTrackIndex + 1, currentAlbumIndex);\n      setPlayingTrackIndex(currentTrackIndex + 1);\n    }\n  };\n  const handlePreviousTrack = () => {\n    if (currentTrackIndex > 0) {\n      handlePlayTrack(currentTrackIndex - 1, currentAlbumIndex);\n      setPlayingTrackIndex(currentTrackIndex - 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"album row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: coverUrl,\n        alt: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"Album Title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"Artist Name\",\n        children: artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePlayTrack(0, currentAlbumIndex),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePreviousTrack,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextTrack,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"row\",\n      children: tracks.map((track, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `row trackList ${playingTrackIndex === index ? 'playing' : ''}`,\n        onClick: () => {\n          handleTrackClick(index);\n          setPlayingTrackIndex(index);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: track.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Album, \"Dy6q0ASKADKjLKoVGV4R/BkxOfs=\");\n_c = Album;\nexport default Album;\nvar _c;\n$RefreshReg$(_c, \"Album\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Album","_ref","_s","album","handlePlayTrack","currentTrackIndex","currentAlbumIndex","coverUrl","title","artist","tracks","playingTrackIndex","setPlayingTrackIndex","handleTrackClick","index","handleNextTrack","length","handlePreviousTrack","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","track","_c","$RefreshReg$"],"sources":["/Users/jomosmith/Desktop/Portfolio Projects/Baby Bop/babybop/src/Albums.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Album = ({ album, handlePlayTrack, currentTrackIndex, currentAlbumIndex }) => {\n  const { coverUrl, title, artist, tracks } = album;\n\n  const [playingTrackIndex, setPlayingTrackIndex] = useState(-1);\n\n  const handleTrackClick = (index) => {\n    handlePlayTrack(index, currentAlbumIndex);\n    setPlayingTrackIndex(index);\n  };\n\n  const handleNextTrack = () => {\n    if (currentTrackIndex < tracks.length - 1) {\n      handlePlayTrack(currentTrackIndex + 1, currentAlbumIndex);\n      setPlayingTrackIndex(currentTrackIndex + 1);\n    }\n  };\n\n  const handlePreviousTrack = () => {\n    if (currentTrackIndex > 0) {\n      handlePlayTrack(currentTrackIndex - 1, currentAlbumIndex);\n      setPlayingTrackIndex(currentTrackIndex - 1);\n    }\n  };\n\n  return (\n    <div className=\"album row\">\n      <div className=\"col\">\n        <img src={coverUrl} alt={title} />\n      </div>\n      <div className=\"col\">\n        <h2 className=\"Album Title\">{title}</h2>\n        <h3 className=\"Artist Name\">{artist}</h3>\n      </div>\n      <div className=\"button-container\">\n        <button onClick={() => handlePlayTrack(0, currentAlbumIndex)}>\n          <span>Play</span>\n        </button>\n        <button onClick={handlePreviousTrack}>\n          <span>Previous</span>\n        </button>\n        <button onClick={handleNextTrack}>\n          <span>Next</span>\n        </button>\n      </div>\n      <ul className=\"row\">\n        {tracks.map((track, index) => (\n          <li\n            key={index}\n            className={`row trackList ${playingTrackIndex === index ? 'playing' : ''}`}\n            onClick={() => {\n              handleTrackClick(index);\n              setPlayingTrackIndex(index);\n            }}\n          >\n            <span>{track.title}</span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Album;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}