{"ast":null,"code":"var _jsxFileName = \"/Users/jomosmith/Desktop/Portfolio Projects/Baby Bop/babybop/src/Album.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Album = _ref => {\n  _s();\n  let {\n    album,\n    handlePlayTrack,\n    currentTrackIndex,\n    currentAlbumIndex,\n    updatePlayingTrackIndex\n  } = _ref;\n  const {\n    coverUrl,\n    title,\n    artist,\n    tracks\n  } = album;\n  const [playingTrackIndex, setPlayingTrackIndex] = useState(-1);\n  const [playingAlbumIndex, setPlayingAlbumIndex] = useState(-1);\n  const handleTrackClick = (index, e) => {\n    const currentPlaying = document.querySelector('.playing');\n    if (currentPlaying) {\n      currentPlaying.classList.remove('playing');\n    }\n    e.currentTarget.classList.add('playing');\n    setPlayingTrackIndex(index);\n    handlePlayTrack(index, currentAlbumIndex);\n    setPlayingAlbumIndex(currentAlbumIndex);\n    updatePlayingTrackIndex(index);\n  };\n  const handlePlayProject = albumIndex => {\n    const tracks = document.querySelectorAll('.trackList');\n    tracks.forEach(track => track.classList.remove('playing'));\n    handlePlayTrack(0, albumIndex);\n    const playingElement = document.querySelector(\".trackList\");\n    if (playingElement) {\n      playingElement.classList.add('playing');\n    }\n    setPlayingTrackIndex(0);\n    setPlayingAlbumIndex(albumIndex);\n    updatePlayingTrackIndex(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"album row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: coverUrl,\n        alt: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"Album Title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"Artist Name\",\n        children: artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePlayProject(currentAlbumIndex),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"row\",\n      children: tracks.map((track, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `row trackList ${playingTrackIndex === index ? 'playing' : ''}`,\n        onClick: e => handleTrackClick(index, e),\n        children: [console.log(track.title + '  trackIndex: ' + index + ' ' + 'playiing Track Index :  ' + playingTrackIndex), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: track.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Album, \"A/rSoqzapVhhSeS0BnI4RUWwwx4=\");\n_c = Album;\nexport default Album;\nvar _c;\n$RefreshReg$(_c, \"Album\");","map":{"version":3,"names":["Album","_ref","_s","album","handlePlayTrack","currentTrackIndex","currentAlbumIndex","updatePlayingTrackIndex","coverUrl","title","artist","tracks","playingTrackIndex","setPlayingTrackIndex","useState","playingAlbumIndex","setPlayingAlbumIndex","handleTrackClick","index","e","currentPlaying","document","querySelector","classList","remove","currentTarget","add","handlePlayProject","albumIndex","querySelectorAll","forEach","track","playingElement","_jsxDEV","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","class","onClick","map","console","log","_c","$RefreshReg$"],"sources":["/Users/jomosmith/Desktop/Portfolio Projects/Baby Bop/babybop/src/Album.js"],"sourcesContent":["const Album = ({ album, handlePlayTrack, currentTrackIndex, currentAlbumIndex, updatePlayingTrackIndex }) => {\n  const { coverUrl, title, artist, tracks } = album;\n  const [playingTrackIndex, setPlayingTrackIndex] = useState(-1);\n  const [playingAlbumIndex , setPlayingAlbumIndex] =  useState(-1);\n\n  const handleTrackClick = (index, e) => {\n    const currentPlaying = document.querySelector('.playing');\n    if (currentPlaying) {\n      currentPlaying.classList.remove('playing');\n    }\n    e.currentTarget.classList.add('playing');\n    setPlayingTrackIndex(index);\n    handlePlayTrack(index, currentAlbumIndex);\n    setPlayingAlbumIndex(currentAlbumIndex);\n    updatePlayingTrackIndex(index);\n  };\n\n  const handlePlayProject = (albumIndex) => {\n    const tracks = document.querySelectorAll('.trackList');\n    tracks.forEach(track => track.classList.remove('playing'));\n    handlePlayTrack(0, albumIndex);\n    const playingElement = document.querySelector(\".trackList\");\n    if (playingElement) {\n      playingElement.classList.add('playing');\n    }\n    setPlayingTrackIndex(0);\n    setPlayingAlbumIndex(albumIndex);\n    updatePlayingTrackIndex(0);\n  };\n\n\n  return (\n    <div className=\"album row\">\n      <div className=\"col\">\n        <img src={coverUrl} alt={title} />\n      </div>\n      <div className=\"col\">\n        <h2 className=\"Album Title\">{title}</h2>\n        <h3 className=\"Artist Name\">{artist}</h3>\n      </div>\n      <div class=\"button-container\">\n        <button onClick={() => handlePlayProject(currentAlbumIndex)}>\n          <span>Play</span>\n        </button>\n      </div>\n      <ul className=\"row\">\n        {tracks.map((track, index) => (\n          <li\n            key={index}\n            className={`row trackList ${playingTrackIndex === index   ? 'playing' : ''}`}\n            onClick={(e) => handleTrackClick(index, e)}\n          >\n               {console.log(track.title + '  trackIndex: ' + index  + ' ' + 'playiing Track Index :  ' + playingTrackIndex)}\n            <span>{track.title}</span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\nexport default Album;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}