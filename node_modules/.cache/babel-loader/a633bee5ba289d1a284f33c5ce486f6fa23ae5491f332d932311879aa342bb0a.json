{"ast":null,"code":"var _jsxFileName = \"/Users/jomosmith/Desktop/Baby Bop/babybop/src/Album.js\";\nimport React from 'react';\nimport Track from './Track';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Album = _ref => {\n  let {\n    album,\n    handlePlayTrack,\n    currentTrackIndex\n  } = _ref;\n  const {\n    coverUrl,\n    title,\n    artist,\n    tracks,\n    id\n  } = album;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"album row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: coverUrl,\n        alt: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"Album Title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"Artist Name\",\n        children: artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"row\",\n      children: tracks.map((track, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"row trackList\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => handlePlayTrack(id),\n          children: track.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = Album;\nexport default Album;\nvar _c;\n$RefreshReg$(_c, \"Album\");","map":{"version":3,"names":["React","Track","jsxDEV","_jsxDEV","Album","_ref","album","handlePlayTrack","currentTrackIndex","coverUrl","title","artist","tracks","id","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","track","index","onClick","_c","$RefreshReg$"],"sources":["/Users/jomosmith/Desktop/Baby Bop/babybop/src/Album.js"],"sourcesContent":["import React from 'react';\nimport Track from './Track';\n\nconst Album = ({ album, handlePlayTrack, currentTrackIndex }) => {\n  const { coverUrl, title, artist, tracks, id } = album;\n\n  return (\n    <div className=\"album row\">\n      <div className=\"col\">\n        <img src={coverUrl} alt={title} />\n      </div>\n      <div className=\"col\">\n        <h2 className=\"Album Title\">{title}</h2>\n        <h3 className=\"Artist Name\">{artist}</h3>\n      </div>\n\n      {/* <ul className=\"row\">\n        {tracks.map((track, index) => (\n          <li key={index} className=\"row trackList\">\n            <span onClick={() => handlePlayTrack(index)}>{track.title}</span>\n          </li>\n        ))}\n      </ul> */}\n\n<ul className=\"row\">\n        {tracks.map((track, index) => (\n          <li key={id} className=\"row trackList\">\n            <span onClick={() => handlePlayTrack(id)}>{track.title}</span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Album;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,KAAK,GAAGC,IAAA,IAAmD;EAAA,IAAlD;IAAEC,KAAK;IAAEC,eAAe;IAAEC;EAAkB,CAAC,GAAAH,IAAA;EAC1D,MAAM;IAAEI,QAAQ;IAAEC,KAAK;IAAEC,MAAM;IAAEC,MAAM;IAAEC;EAAG,CAAC,GAAGP,KAAK;EAErD,oBACEH,OAAA;IAAKW,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBZ,OAAA;MAAKW,SAAS,EAAC,KAAK;MAAAC,QAAA,eAClBZ,OAAA;QAAKa,GAAG,EAAEP,QAAS;QAACQ,GAAG,EAAEP;MAAM;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC9B,eACNlB,OAAA;MAAKW,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAClBZ,OAAA;QAAIW,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAEL;MAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACxClB,OAAA;QAAIW,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAEJ;MAAM;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACrC,eAUZlB,OAAA;MAAIW,SAAS,EAAC,KAAK;MAAAC,QAAA,EACVH,MAAM,CAACU,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvBrB,OAAA;QAAaW,SAAS,EAAC,eAAe;QAAAC,QAAA,eACpCZ,OAAA;UAAMsB,OAAO,EAAEA,CAAA,KAAMlB,eAAe,CAACM,EAAE,CAAE;UAAAE,QAAA,EAAEQ,KAAK,CAACb;QAAK;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAQ,GADvDR,EAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAGZ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEV,CAAC;AAACK,EAAA,GA9BItB,KAAK;AAgCX,eAAeA,KAAK;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}