{"ast":null,"code":"var _jsxFileName = \"/Users/jomosmith/Desktop/Portfolio Projects/Baby Bop/babybop/src/Album.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Album = _ref => {\n  _s();\n  let {\n    album,\n    handlePlayTrack,\n    currentTrackIndex,\n    currentAlbumIndex\n  } = _ref;\n  const {\n    coverUrl,\n    title,\n    artist,\n    tracks\n  } = album;\n  const [playingTrackIndex, setPlayingTrackIndex] = useState(-1);\n  const handleTrackClick = index => {\n    handlePlayTrack(index, currentAlbumIndex);\n    setPlayingTrackIndex(index);\n  };\n  useEffect(() => {\n    // Reset the state variables when a new album is selected\n    setPlayingTrackIndex(-1);\n  }, [currentAlbumIndex]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"album row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: coverUrl,\n        alt: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"Album Title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"Artist Name\",\n        children: artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePlayTrack(0, currentAlbumIndex),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"row\",\n      children: tracks.map((track, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `row trackList ${playingTrackIndex === index && currentAlbumIndex === album.id ? 'playing' : ''}`,\n        onClick: () => handleTrackClick(index),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: track.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(Album, \"b4YBXdrrDkk+dRK4OBswgguLmDk=\");\n_c = Album;\nvar _c;\n$RefreshReg$(_c, \"Album\");","map":{"version":3,"names":["Album","_ref","_s","album","handlePlayTrack","currentTrackIndex","currentAlbumIndex","coverUrl","title","artist","tracks","playingTrackIndex","setPlayingTrackIndex","useState","handleTrackClick","index","useEffect","_jsxDEV","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","class","onClick","map","track","id","_c","$RefreshReg$"],"sources":["/Users/jomosmith/Desktop/Portfolio Projects/Baby Bop/babybop/src/Album.js"],"sourcesContent":["const Album = ({ album, handlePlayTrack, currentTrackIndex, currentAlbumIndex }) => {\n  const { coverUrl, title, artist, tracks } = album;\n\n  const [playingTrackIndex, setPlayingTrackIndex] = useState(-1);\n\n  const handleTrackClick = (index) => {\n    handlePlayTrack(index, currentAlbumIndex);\n    setPlayingTrackIndex(index);\n  };\n\n  useEffect(() => {\n    // Reset the state variables when a new album is selected\n    setPlayingTrackIndex(-1);\n  }, [currentAlbumIndex]);\n\n  return (\n    <div className=\"album row\">\n      <div className=\"col\">\n        <img src={coverUrl} alt={title} />\n      </div>\n      <div className=\"col\">\n        <h2 className=\"Album Title\">{title}</h2>\n        <h3 className=\"Artist Name\">{artist}</h3>\n      </div>\n      <div class=\"button-container\">\n        <button onClick={() => handlePlayTrack(0, currentAlbumIndex)}>\n          <span>Play</span>\n        </button>\n      </div>\n      <ul className=\"row\">\n        {tracks.map((track, index) => (\n          <li\n            key={index}\n            className={`row trackList ${playingTrackIndex === index && currentAlbumIndex === album.id ? 'playing' : ''}`}\n            onClick={() => handleTrackClick(index)}\n          >\n            <span>{track.title}</span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}